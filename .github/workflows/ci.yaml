name: CI
on:
  push:
  pull_request:
  # trigger a cron job every monday at 8am
  schedule:
    - cron: '00 08 * * MON'

jobs:
  selftest:
    strategy:
      matrix:
        os:
          - ubuntu-22.04
    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Fetch submodules
        run: |
          git submodule init
          git submodule update

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get -yqq install build-essential libelf-dev

      - name: Build and load /dev/sgx-step
        run: |
          cd $GITHUB_WORKSPACE/kernel/
          #./install_SGX_driver.sh
          make clean load

      - name: Build SGX-Step selftest applications
        run: |
          for d in $GITHUB_WORKSPACE/app/selftest/*/ ; do \
            echo -e "\n**** $d ****\n" ; cd "$d" ; make clean all ; ldd ./app ; \
          done
          for d in $GITHUB_WORKSPACE/app/baresgx/ ; do \
            echo -e "\n**** $d ****\n" ; cd "$d" ; make clean all ; ldd ./app ; \
          done

  intel-sdk:
    strategy:
      matrix:
        os:
          - ubuntu-22.04
    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Fetch submodules
        run: |
          git submodule init
          git submodule update

      - name: Patch and install Intel SGX SDK
        run: |
          cd $GITHUB_WORKSPACE/sdk/intel-sdk/
          sudo apt-get update
          bash -x ./install_SGX_SDK.sh
          source /opt/intel/sgxsdk/environment
          sudo service aesmd status

      - name: Run Intel SGX SDK sample code in simulator
        run: |
          source /opt/intel/sgxsdk/environment
          cd $GITHUB_WORKSPACE/sdk/intel-sdk/linux-sgx/SampleCode/LocalAttestation
          make SGX_MODE=SIM
          cd bin
          ldd ./app
          ./app

      - name: Build SGX-Step Intel SGX SDK applications
        run: |
          source /opt/intel/sgxsdk/environment
          for d in $GITHUB_WORKSPACE/app/{aep-redirect,bench,foreshadow,lvi,memcmp}/ ; do \
            echo -e "\n**** $d ****\n" ; cd "$d" ; make; ldd ./app ; \
          done

  oe-sdk:
    strategy:
      matrix:
        os:
          - ubuntu-22.04
    runs-on: ${{ matrix.os }}

    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@v1.3.1

      - name: Check out repository
        uses: actions/checkout@v2

      - name: Fetch submodules
        run: |
          git submodule init
          git submodule update

      - name: Patch and install OE SDK
        run: |
          cd $GITHUB_WORKSPACE/sdk/oe/
          bash -x ./install_oe_sdk.sh
          source /opt/openenclave/share/openenclave/openenclaverc

      - name: Run OE sample code in simulator
        run: |
          source /opt/openenclave/share/openenclave/openenclaverc
          cd $GITHUB_WORKSPACE/sdk/oe/openenclave/samples/helloworld
          make
          ldd ./host/helloworld_host
          ./host/helloworld_host ./enclave/enclave.signed --simulate

      - name: Build SGX-Step oe applications
        run: |
          source /opt/openenclave/share/openenclave/openenclaverc
          make -C libsgxstep/
          for d in $GITHUB_WORKSPACE/app/oe/ ; do \
            echo -e "\n**** $d ****\n" ; cd "$d" ; make; ldd host/helloworld_host ; \
          done
